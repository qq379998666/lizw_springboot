<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<!-- Maven模块版本，目前我们一般都取值4.0.0 -->
	<modelVersion>4.0.0</modelVersion>

	<!-- GroupID 是项目组织唯一的标识符，实际对应JAVA的包的结构，是main目录里java的目录结构。 -->
	<!-- ArtifactID 子模块名称,是项目的唯一的标识符,实际对应项目的名称,就是项目根目录的名称。 -->
	<!-- 指定了项目的当前版本，SNAPSHOT 意为快照，说明该项目还处于开发中，是不稳定的版本。  -->
	<groupId>lizw.springboot</groupId>
	<artifactId>lizw_springboot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	
	<!-- 声明了一个对于用户更为友好的项目名称，不是必须的，推荐为每个pom声明name，以方便信息交流。  -->
	<name>lizw</name>
	<description>Demo project for Spring Boot</description>
	
	<!-- Spring boot的项目必须要将parent设置为spring boot的parent，该parent包含了大量默认的配置，大大简化了我们的开发 -->
	<parent>
		<groupId>org.springframework.boot</groupId> 
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
	    <!-- springboot对web进行支持 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- httpclientpeizhi -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<!-- AOP配置：支持面向方面的编程即AOP，包括spring-aop和AspectJ。 -->
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!-- devtools可以实现页面热部署（即页面修改后会立即生效，这个可以直接在application.properties文件中
			 配置spring.thymeleaf.cache=false来实现）， 实现类文件热部署（类文件修改后不会立即生效），
			实现对属性文件的热部署。  即devtools会监听classpath下的文件变动，
			 并且会立即重启应用（发生在保存时机），注意：因为其采用的虚拟机机制，该项重启是很快的  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <!-- optional=true,依赖不会传递，该项目依赖devtools；之后依赖该项目的项目如果想要使用devtools，需要重新引入 -->
            <optional>true</optional>
        </dependency>
        <!-- Mybatis配置 -->
		<dependency>
		    <groupId>org.mybatis.spring.boot</groupId>
		    <artifactId>mybatis-spring-boot-starter</artifactId>
		    <version>1.3.2</version>
		</dependency>
		<!-- 流式查询需要架包：海量数据查询结果必用 -->
		<dependency>
		    <groupId>org.springframework.batch</groupId>
		    <artifactId>spring-batch-core</artifactId>
		    <version>2.0.4.RELEASE</version>
		</dependency>
		<!-- jdbc配置 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <!--结构化.xml和.properites文件.-->  
        <!--     
        <dependency> 
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.1.1</version>
        </dependency> 
         --> 
        <!-- 分页插件 -->
       <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>1.2.3</version>
        </dependency>

        <!-- mysql配置 -->   
        <!-- scope:依赖项的使用范围：
        		compile，缺省值，适用于所有阶段，会随着项目一起发布。
				provided，类似compile，期望JDK、容器或使用者会提供这个依赖。如servlet.jar。
				runtime，只在运行时使用，如JDBC驱动，适用运行和测试阶段。
				test，只在测试时使用，用于编译和运行测试代码。不会随项目发布。
				system，类似provided，需要显式提供包含依赖的jar，Maven不会在Repository中查找它。
         -->   
        <dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
    		<scope>runtime</scope>
		</dependency>
		<!-- Oracle配置 -->
	    <dependency>
			<groupId>com.oracle</groupId>		
			<artifactId>ojdbc6</artifactId>			
			<version>6.0</version>			
		</dependency>  
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- 配置日志文件,不是spring-boot-starter-logging-->       
        <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.21</version>
		</dependency>

		<!-- JSONObject工具需要引的架包 -->
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.4</version>
            <classifier>jdk15</classifier>
		</dependency> 
		<!-- 配置liqiubase -->
		<dependency>
		    <groupId>org.liquibase</groupId>
		    <artifactId>liquibase-core</artifactId>
		    <version>3.5.3</version>
		</dependency>
		<dependency>
	        <groupId>com.alibaba</groupId>
	        <artifactId>druid</artifactId>
	        <version>1.0.24</version>
	    </dependency>
	    
	    <!-- 导入XML形式的文档事使用 -->
	    <dependency>
            <groupId>org.apache.xmlbeans</groupId>
            <artifactId>xmlbeans</artifactId>
            <version>2.6.0</version>
        </dependency>
	    <!-- 配置上传 -->
	    <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>3.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.2</version>
        </dependency>
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.4</version>
            <classifier>jdk15</classifier>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.16</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.16</version>
        </dependency>
        <!-- Redis -->
        <dependency>
		   <groupId>org.springframework.boot</groupId>
		   <artifactId>spring-boot-starter-data-redis</artifactId>
		   <version>1.5.7.RELEASE</version>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
		<!--spring2.0集成redis所需common-pool2-->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
			<version>2.0.2.RELEASE</version>
		</dependency>

		<!-- 使用@Slf4j以后，默认的Slf4j对象就是log，所以使用时候可以直接log.info()、log.error()……，你需要引入 -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.12</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.5	</version>
		</dependency>
        
        	    
	</dependencies>

	<build>
	    <!-- 自定义打包部署包名字 -->
	    <finalName>lizw </finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				
				<!--如果没有fork配置,devtools不起作用，即项目修改后不会重新启动 -->
				<configuration>
		           <fork>true</fork>
		        </configuration>
			</plugin>
		</plugins>
	</build>


</project>
