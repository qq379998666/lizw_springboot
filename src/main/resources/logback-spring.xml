<?xml version="1.0" encoding="UTF-8"?>
<!-- configuration标签：scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
                      scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 
                      debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!-- contextName标签：每个logger都关联到logger上下文，默认上下文名称为“default”。但可以使用<contextName>设置成其他名字，用于区分不同应用程序的记录。一旦设置，不能修改,可以通过%contextName来打印日志上下文名称。 -->
    <contextName>lizw_springbooot</contextName>

    <!-- 引入消息资源文件 -->
    <property resource="properties/logback.properties" />
    
    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />
       
    <!--输出到控制台,固定标签,无需修改 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 配置打印在控制台信息级别：TRACE < DEBUG < INFO < WARN < ERROR -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
             <level>${log.level}</level>
        </filter>     
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!--输出日志信息到文件--> 
    <appender name="logFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 如果是 true,日志被追加到文件结尾,如果是 false,清空现存文件默认是true -->
        <append>${log.append}</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.base}/lizw_springbooot_logback.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 保留30天 -->  
            <maxHistory>${log.maxHistory}</maxHistory>
            <!-- 日志文件最大为1GB -->
            <totalSizeCap>${log.totalSizeCap}</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>
    
    <!-- root标签：必选节点，用来指定最基础的日志输出级别，只有一个level属性。 -->
    <root>
        <appender-ref ref="console"/>
        <appender-ref ref="logFile"/>
    </root>
    
</configuration>